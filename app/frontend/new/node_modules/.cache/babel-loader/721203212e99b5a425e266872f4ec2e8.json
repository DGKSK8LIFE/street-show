{"ast":null,"code":"var _jsxFileName = \"/home/abhirup/street-show/app/frontend/new/src/dialog.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport PropTypes from 'prop-types';\nimport { withStyles } from 'material-ui/styles';\nimport './dialog.css';\nexport default function ScrollDialog() {\n  const styles = {\n    dialogPaper: {\n      minHeight: '60vh',\n      maxHeight: '60vh'\n    }\n  };\n\n  const YourDialog = ({\n    classes\n  }) => /*#__PURE__*/React.createElement(Dialog, {\n    classes: {\n      paper: classes.dialogPaper\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"dialogishness\"));\n\n  const [open, setOpen] = React.useState(false);\n  const [scroll, setScroll] = React.useState('paper');\n\n  const handleClickOpen = scrollType => () => {\n    setOpen(true);\n    setScroll(scrollType);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const descriptionElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (open) {\n      const {\n        current: descriptionElement\n      } = descriptionElementRef;\n\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      zIndex: 800,\n      bottom: 10,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      left: 0,\n      right: 0,\n      width: 'fit-content'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClickOpen('paper'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"UP\"), /*#__PURE__*/React.createElement(Dialog, {\n    fullWidth: true,\n    maxWidth: 'none',\n    open: open,\n    onClose: handleClose,\n    scroll: scroll,\n    \"aria-labelledby\": \"scroll-dialog-title\",\n    \"aria-describedby\": \"scroll-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"scroll-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Subscribe\"), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: scroll === 'paper',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"scroll-dialog-description\",\n    ref: descriptionElementRef,\n    tabIndex: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, [...new Array(50)].map(() => `Cras mattis consectetur purus sit amet fermentum.\n                                        Cras justo odio, dapibus ac facilisis in, egestas eget quam.\n                                        Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                                        Praesent commodo cursus magna, vel scelerisque nisl consectetur et.`).join('\\n'))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, \"Subscribe\"))));\n}","map":{"version":3,"sources":["/home/abhirup/street-show/app/frontend/new/src/dialog.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","ArrowUpwardIcon","PropTypes","withStyles","ScrollDialog","styles","dialogPaper","minHeight","maxHeight","YourDialog","classes","paper","open","setOpen","useState","scroll","setScroll","handleClickOpen","scrollType","handleClose","descriptionElementRef","useRef","useEffect","current","descriptionElement","focus","position","zIndex","bottom","marginLeft","marginRight","left","right","width","Array","map","join"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport PropTypes from 'prop-types';\nimport { withStyles } from 'material-ui/styles';\nimport './dialog.css'\nexport default function ScrollDialog() {\n    const styles = {\n        dialogPaper: {\n            minHeight: '60vh',\n            maxHeight: '60vh',\n        },\n    };\n\n    const YourDialog = ({ classes }) => (\n        <Dialog classes={{ paper: classes.dialogPaper }}>\n            <div>dialogishness</div>\n        </Dialog>\n    );\n\n    const [open, setOpen] = React.useState(false);\n    const [scroll, setScroll] = React.useState('paper');\n\n    const handleClickOpen = (scrollType) => () => {\n        setOpen(true);\n        setScroll(scrollType);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const descriptionElementRef = React.useRef(null);\n    React.useEffect(() => {\n        if (open) {\n            const { current: descriptionElement } = descriptionElementRef;\n            if (descriptionElement !== null) {\n                descriptionElement.focus();\n            }\n        }\n    }, [open]);\n\n    return (\n        <div\n            style={{\n                position: 'absolute',\n                zIndex: 800,\n                bottom: 10,\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                left: 0,\n                right: 0,\n                width: 'fit-content',\n\n            }}\n        >\n            <Button onClick={handleClickOpen('paper')}>UP</Button>\n            {/* <Button onClick={handleClickOpen('body')}\n                stlye={{\n\n                }}\n            >\n                Up\n            </Button> */}\n\n            <Dialog\n                fullWidth={true}\n                maxWidth={'none'}\n                open={open}\n                onClose={handleClose}\n                scroll={scroll}\n                aria-labelledby=\"scroll-dialog-title\"\n                aria-describedby=\"scroll-dialog-description\"\n            >\n                <DialogTitle id=\"scroll-dialog-title\">Subscribe</DialogTitle>\n                <DialogContent dividers={scroll === 'paper'}>\n                    <DialogContentText\n                        id=\"scroll-dialog-description\"\n                        ref={descriptionElementRef}\n                        tabIndex={-1}\n                    >\n                        {[...new Array(50)]\n                            .map(\n                                () => `Cras mattis consectetur purus sit amet fermentum.\n                                        Cras justo odio, dapibus ac facilisis in, egestas eget quam.\n                                        Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                                        Praesent commodo cursus magna, vel scelerisque nisl consectetur et.`,\n                            )\n                            .join('\\n')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n          </Button>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Subscribe\n          </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}