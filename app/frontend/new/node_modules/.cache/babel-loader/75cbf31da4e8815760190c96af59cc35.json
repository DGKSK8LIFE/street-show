{"ast":null,"code":"var _jsxFileName = \"/home/abhirup/street-show/app/frontend/new/src/newdialog.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\nimport { withStyles } from 'material-ui/styles';\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  }\n});\n\nfunction SimpleDialog(props) {\n  const styles = {\n    dialogPaper: {\n      minHeight: '80vh',\n      maxHeight: '80vh'\n    }\n  };\n\n  const YourDialog = ({\n    classes\n  }) => /*#__PURE__*/React.createElement(Dialog, {\n    classes: {\n      paper: classes.dialogPaper\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"dialogishness\"));\n\n  const classes = useStyles();\n  const {\n    onClose,\n    selectedValue,\n    open\n  } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = value => {\n    onClose(value);\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    style: {\n      position: 'absolute',\n      zIndex: 1000,\n      bottom: 10,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      left: 0,\n      right: 0,\n      width: 'fit-content',\n      minHeight: 800\n    },\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"simple-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Set backup account\"), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, emails.map(email => /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: () => handleListItemClick(email),\n    key: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(PersonIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(ListItem, {\n    autoFocus: true,\n    button: true,\n    onClick: () => handleListItemClick('addAccount'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Add account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }))));\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};\nexport default function SimpleDialogDemo() {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Selected: \", selectedValue), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Open simple dialog\"), /*#__PURE__*/React.createElement(SimpleDialog, {\n    selectedValue: selectedValue,\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/abhirup/street-show/app/frontend/new/src/newdialog.js"],"names":["React","PropTypes","makeStyles","Button","Avatar","List","ListItem","ListItemAvatar","ListItemText","DialogTitle","Dialog","PersonIcon","AddIcon","Typography","blue","withStyles","emails","useStyles","avatar","backgroundColor","color","SimpleDialog","props","styles","dialogPaper","minHeight","maxHeight","YourDialog","classes","paper","onClose","selectedValue","open","handleClose","handleListItemClick","value","position","zIndex","bottom","marginLeft","marginRight","left","right","width","map","email","propTypes","func","isRequired","bool","string","SimpleDialogDemo","setOpen","useState","setSelectedValue","handleClickOpen"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\nimport { withStyles } from 'material-ui/styles';\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n});\n\nfunction SimpleDialog(props) {\n\n\n    const styles = {\n        dialogPaper: {\n            minHeight: '80vh',\n            maxHeight: '80vh',\n        },\n    };\n\n    const YourDialog = ({ classes }) => (\n        <Dialog classes={{ paper: classes.dialogPaper }}>\n            <div>dialogishness</div>\n        </Dialog>\n    );\n\n\n    const classes = useStyles();\n    const { onClose, selectedValue, open } = props;\n\n    const handleClose = () => {\n        onClose(selectedValue);\n    };\n\n    const handleListItemClick = (value) => {\n        onClose(value);\n    };\n\n    return (\n        <Dialog\n            style={{\n                position: 'absolute',\n                zIndex: 1000,\n                bottom: 10,\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                left: 0,\n                right: 0,\n                width: 'fit-content',\n                minHeight: 800,\n\n            }}\n            onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}\n        >\n            <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n            <List>\n                {emails.map((email) => (\n                    <ListItem button onClick={() => handleListItemClick(email)} key={email}>\n                        <ListItemAvatar>\n                            <Avatar className={classes.avatar}>\n                                <PersonIcon />\n                            </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText primary={email} />\n                    </ListItem>\n                ))}\n\n                <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\n                    <ListItemAvatar>\n                        <Avatar>\n                            <AddIcon />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Add account\" />\n                </ListItem>\n            </List>\n        </Dialog>\n    );\n}\n\nSimpleDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedValue: PropTypes.string.isRequired,\n};\n\nexport default function SimpleDialogDemo() {\n    const [open, setOpen] = React.useState(false);\n    const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (value) => {\n        setOpen(false);\n        setSelectedValue(value);\n    };\n\n    return (\n        <div>\n            <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\n            <br />\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n                Open simple dialog\n      </Button>\n            <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}