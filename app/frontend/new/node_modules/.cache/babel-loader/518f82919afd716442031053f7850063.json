{"ast":null,"code":"var _jsxFileName = \"/home/abhirup/street-show/app/frontend/new/src/dialog.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nexport default function ScrollDialog() {\n  const [open, setOpen] = React.useState(false);\n  const [scroll, setScroll] = React.useState('paper');\n\n  const handleClickOpen = scrollType => () => {\n    setOpen(true);\n    setScroll(scrollType);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const descriptionElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (open) {\n      const {\n        current: descriptionElement\n      } = descriptionElementRef;\n\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      zIndex: 800,\n      bottom: 10,\n      left: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClickOpen('body'),\n    stlye: {\n      position: 'relative',\n      marginLeft: 500,\n      marginRight: 'auto',\n      left: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Up\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    scroll: scroll,\n    \"aria-labelledby\": \"scroll-dialog-title\",\n    \"aria-describedby\": \"scroll-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"scroll-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Subscribe\"), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: scroll === 'paper',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"scroll-dialog-description\",\n    ref: descriptionElementRef,\n    tabIndex: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, [...new Array(50)].map(() => `Cras mattis consectetur purus sit amet fermentum.\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`).join('\\n'))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Subscribe\"))));\n}","map":{"version":3,"sources":["/home/abhirup/street-show/app/frontend/new/src/dialog.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","ArrowUpwardIcon","ScrollDialog","open","setOpen","useState","scroll","setScroll","handleClickOpen","scrollType","handleClose","descriptionElementRef","useRef","useEffect","current","descriptionElement","focus","position","zIndex","bottom","left","marginLeft","marginRight","Array","map","join"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\nexport default function ScrollDialog() {\n    const [open, setOpen] = React.useState(false);\n    const [scroll, setScroll] = React.useState('paper');\n\n    const handleClickOpen = (scrollType) => () => {\n        setOpen(true);\n        setScroll(scrollType);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const descriptionElementRef = React.useRef(null);\n    React.useEffect(() => {\n        if (open) {\n            const { current: descriptionElement } = descriptionElementRef;\n            if (descriptionElement !== null) {\n                descriptionElement.focus();\n            }\n        }\n    }, [open]);\n\n    return (\n        <div\n            style={{\n                position: 'absolute',\n                zIndex: 800,\n                bottom: 10,\n                left: 100\n            }}\n        >\n            {/* <Button onClick={handleClickOpen('paper')}>scroll=paper</Button> */}\n            <Button onClick={handleClickOpen('body')}\n                stlye={{\n                    position: 'relative',\n                    marginLeft: 500,\n                    marginRight: 'auto',\n                    left: 50\n                }}\n            >\n                Up\n            </Button>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                scroll={scroll}\n                aria-labelledby=\"scroll-dialog-title\"\n                aria-describedby=\"scroll-dialog-description\"\n            >\n                <DialogTitle id=\"scroll-dialog-title\">Subscribe</DialogTitle>\n                <DialogContent dividers={scroll === 'paper'}>\n                    <DialogContentText\n                        id=\"scroll-dialog-description\"\n                        ref={descriptionElementRef}\n                        tabIndex={-1}\n                    >\n                        {[...new Array(50)]\n                            .map(\n                                () => `Cras mattis consectetur purus sit amet fermentum.\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`,\n                            )\n                            .join('\\n')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n          </Button>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Subscribe\n          </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}