{"ast":null,"code":"/*! https://mths.be/scrollingelement v1.5.2 by @diegoperini & @mathias | MIT license */\nif (!('scrollingElement' in document)) (function () {\n  function computeStyle(element) {\n    if (window.getComputedStyle) {\n      // Support Firefox < 4 which throws on a single parameter.\n      return getComputedStyle(element, null);\n    } // Support Internet Explorer < 9.\n\n\n    return element.currentStyle;\n  }\n\n  function isBodyElement(element) {\n    // The `instanceof` check gives the correct result for e.g. `body` in a\n    // non-HTML namespace.\n    if (window.HTMLBodyElement) {\n      return element instanceof HTMLBodyElement;\n    } // Fall back to a `tagName` check for old browsers.\n\n\n    return /body/i.test(element.tagName);\n  }\n\n  function getNextBodyElement(frameset) {\n    // We use this function to be correct per spec in case `document.body` is\n    // a `frameset` but there exists a later `body`. Since `document.body` is\n    // a `frameset`, we know the root is an `html`, and there was no `body`\n    // before the `frameset`, so we just need to look at siblings after the\n    // `frameset`.\n    var current = frameset;\n\n    while (current = current.nextSibling) {\n      if (current.nodeType == 1 && isBodyElement(current)) {\n        return current;\n      }\n    } // No `body` found.\n\n\n    return null;\n  } // Note: standards mode / quirks mode can be toggled at runtime via\n  // `document.write`.\n\n\n  var isCompliantCached;\n\n  var isCompliant = function () {\n    var isStandardsMode = /^CSS1/.test(document.compatMode);\n\n    if (!isStandardsMode) {\n      // In quirks mode, the result is equivalent to the non-compliant\n      // standards mode behavior.\n      return false;\n    }\n\n    if (isCompliantCached === void 0) {\n      // When called for the first time, check whether the browser is\n      // standard-compliant, and cache the result.\n      var iframe = document.createElement('iframe');\n      iframe.style.height = '1px';\n      (document.body || document.documentElement || document).appendChild(iframe);\n      var doc = iframe.contentWindow.document;\n      doc.write('<!DOCTYPE html><div style=\"height:9999em\">x</div>');\n      doc.close();\n      isCompliantCached = doc.documentElement.scrollHeight > doc.body.scrollHeight;\n      iframe.parentNode.removeChild(iframe);\n    }\n\n    return isCompliantCached;\n  };\n\n  function isRendered(style) {\n    return style.display != 'none' && !(style.visibility == 'collapse' && /^table-(.+-group|row|column)$/.test(style.display));\n  }\n\n  function isScrollable(body) {\n    // A `body` element is scrollable if `body` and `html` both have\n    // non-`visible` overflow and are both being rendered.\n    var bodyStyle = computeStyle(body);\n    var htmlStyle = computeStyle(document.documentElement);\n    return bodyStyle.overflow != 'visible' && htmlStyle.overflow != 'visible' && isRendered(bodyStyle) && isRendered(htmlStyle);\n  }\n\n  var scrollingElement = function () {\n    if (isCompliant()) {\n      return document.documentElement;\n    }\n\n    var body = document.body; // Note: `document.body` could be a `frameset` element, or `null`.\n    // `tagName` is uppercase in HTML, but lowercase in XML.\n\n    var isFrameset = body && !/body/i.test(body.tagName);\n    body = isFrameset ? getNextBodyElement(body) : body; // If `body` is itself scrollable, it is not the `scrollingElement`.\n\n    return body && isScrollable(body) ? null : body;\n  };\n\n  if (Object.defineProperty) {\n    // Support modern browsers that lack a native implementation.\n    Object.defineProperty(document, 'scrollingElement', {\n      'get': scrollingElement\n    });\n  } else if (document.__defineGetter__) {\n    // Support Firefox ≤ 3.6.9, Safari ≤ 4.1.3.\n    document.__defineGetter__('scrollingElement', scrollingElement);\n  } else {\n    // IE ≤ 4 lacks `attachEvent`, so it only gets this one assignment. IE ≤ 7\n    // gets it too, but the value is updated later (see `propertychange`).\n    document.scrollingElement = scrollingElement();\n    document.attachEvent && document.attachEvent('onpropertychange', function () {\n      // This is for IE ≤ 7 only.\n      // A `propertychange` event fires when `<body>` is parsed because\n      // `document.activeElement` then changes.\n      if (window.event.propertyName == 'activeElement') {\n        document.scrollingElement = scrollingElement();\n      }\n    });\n  }\n})();","map":{"version":3,"sources":["/home/abhirup/street-show/app/frontend/new/node_modules/scrollingelement/scrollingelement.js"],"names":["document","computeStyle","element","window","getComputedStyle","currentStyle","isBodyElement","HTMLBodyElement","test","tagName","getNextBodyElement","frameset","current","nextSibling","nodeType","isCompliantCached","isCompliant","isStandardsMode","compatMode","iframe","createElement","style","height","body","documentElement","appendChild","doc","contentWindow","write","close","scrollHeight","parentNode","removeChild","isRendered","display","visibility","isScrollable","bodyStyle","htmlStyle","overflow","scrollingElement","isFrameset","Object","defineProperty","__defineGetter__","attachEvent","event","propertyName"],"mappings":"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","sourcesContent":["/*! https://mths.be/scrollingelement v1.5.2 by @diegoperini & @mathias | MIT license */\nif (!('scrollingElement' in document)) (function() {\n\n\tfunction computeStyle(element) {\n\t\tif (window.getComputedStyle) {\n\t\t\t// Support Firefox < 4 which throws on a single parameter.\n\t\t\treturn getComputedStyle(element, null);\n\t\t}\n\t\t// Support Internet Explorer < 9.\n\t\treturn element.currentStyle;\n\t}\n\n\tfunction isBodyElement(element) {\n\t\t// The `instanceof` check gives the correct result for e.g. `body` in a\n\t\t// non-HTML namespace.\n\t\tif (window.HTMLBodyElement) {\n\t\t\treturn element instanceof HTMLBodyElement;\n\t\t}\n\t\t// Fall back to a `tagName` check for old browsers.\n\t\treturn /body/i.test(element.tagName);\n\t}\n\n\tfunction getNextBodyElement(frameset) {\n\t\t// We use this function to be correct per spec in case `document.body` is\n\t\t// a `frameset` but there exists a later `body`. Since `document.body` is\n\t\t// a `frameset`, we know the root is an `html`, and there was no `body`\n\t\t// before the `frameset`, so we just need to look at siblings after the\n\t\t// `frameset`.\n\t\tvar current = frameset;\n\t\twhile (current = current.nextSibling) {\n\t\t\tif (current.nodeType == 1 && isBodyElement(current)) {\n\t\t\t\treturn current;\n\t\t\t}\n\t\t}\n\t\t// No `body` found.\n\t\treturn null;\n\t}\n\n\t// Note: standards mode / quirks mode can be toggled at runtime via\n\t// `document.write`.\n\tvar isCompliantCached;\n\tvar isCompliant = function() {\n\t\tvar isStandardsMode = /^CSS1/.test(document.compatMode);\n\t\tif (!isStandardsMode) {\n\t\t\t// In quirks mode, the result is equivalent to the non-compliant\n\t\t\t// standards mode behavior.\n\t\t\treturn false;\n\t\t}\n\t\tif (isCompliantCached === void 0) {\n\t\t\t// When called for the first time, check whether the browser is\n\t\t\t// standard-compliant, and cache the result.\n\t\t\tvar iframe = document.createElement('iframe');\n\t\t\tiframe.style.height = '1px';\n\t\t\t(document.body || document.documentElement || document).appendChild(iframe);\n\t\t\tvar doc = iframe.contentWindow.document;\n\t\t\tdoc.write('<!DOCTYPE html><div style=\"height:9999em\">x</div>');\n\t\t\tdoc.close();\n\t\t\tisCompliantCached = doc.documentElement.scrollHeight > doc.body.scrollHeight;\n\t\t\tiframe.parentNode.removeChild(iframe);\n\t\t}\n\t\treturn isCompliantCached;\n\t};\n\n\tfunction isRendered(style) {\n\t\treturn style.display != 'none' && !(style.visibility == 'collapse' &&\n\t\t\t/^table-(.+-group|row|column)$/.test(style.display));\n\t}\n\n\tfunction isScrollable(body) {\n\t\t// A `body` element is scrollable if `body` and `html` both have\n\t\t// non-`visible` overflow and are both being rendered.\n\t\tvar bodyStyle = computeStyle(body);\n\t\tvar htmlStyle = computeStyle(document.documentElement);\n\t\treturn bodyStyle.overflow != 'visible' && htmlStyle.overflow != 'visible' &&\n\t\t\tisRendered(bodyStyle) && isRendered(htmlStyle);\n\t}\n\n\tvar scrollingElement = function() {\n\t\tif (isCompliant()) {\n\t\t\treturn document.documentElement;\n\t\t}\n\t\tvar body = document.body;\n\t\t// Note: `document.body` could be a `frameset` element, or `null`.\n\t\t// `tagName` is uppercase in HTML, but lowercase in XML.\n\t\tvar isFrameset = body && !/body/i.test(body.tagName);\n\t\tbody = isFrameset ? getNextBodyElement(body) : body;\n\t\t// If `body` is itself scrollable, it is not the `scrollingElement`.\n\t\treturn body && isScrollable(body) ? null : body;\n\t};\n\n\tif (Object.defineProperty) {\n\t\t// Support modern browsers that lack a native implementation.\n\t\tObject.defineProperty(document, 'scrollingElement', {\n\t\t\t'get': scrollingElement\n\t\t});\n\t} else if (document.__defineGetter__) {\n\t\t// Support Firefox ≤ 3.6.9, Safari ≤ 4.1.3.\n\t\tdocument.__defineGetter__('scrollingElement', scrollingElement);\n\t} else {\n\t\t// IE ≤ 4 lacks `attachEvent`, so it only gets this one assignment. IE ≤ 7\n\t\t// gets it too, but the value is updated later (see `propertychange`).\n\t\tdocument.scrollingElement = scrollingElement();\n\t\tdocument.attachEvent && document.attachEvent('onpropertychange', function() {\n\t\t\t// This is for IE ≤ 7 only.\n\t\t\t// A `propertychange` event fires when `<body>` is parsed because\n\t\t\t// `document.activeElement` then changes.\n\t\t\tif (window.event.propertyName == 'activeElement') {\n\t\t\t\tdocument.scrollingElement = scrollingElement();\n\t\t\t}\n\t\t});\n\t}\n}());\n"]},"metadata":{},"sourceType":"script"}